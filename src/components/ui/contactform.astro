---
import Button from '../ui/button.astro';
import axios from 'axios';
---

<!-- To make this contact form work, create your free access key from https://web3forms.com/
     Then you will get all form submissions in your email inbox. -->
<form method="POST" id="form" class="w-full max-w-md mx-auto" class="needs-validation" novalidate>
  <input type="checkbox" class="hidden" style="display:none" name="botcheck" />
  <div class="mb-5">
    <input
      type="text"
      placeholder="First Name"
      required
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
      name="first_name"
    />
    <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">First Name</div>
  </div>
  <div class="mb-5">
    <label for="email_address" class="sr-only">E-mail</label><input
      id="email_address"
      type="email"
      placeholder="E-mail"
      name="email"
      required
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    />
    <div class="empty-feedback text-red-400 text-sm mt-1">Please provide your email address.</div>
    <div class="invalid-feedback text-red-400 text-sm mt-1">
      Please provide a valid email address.
    </div>
  </div>
  <div class="mb-3">
    <label for="phone_number" class="sr-only">Email Address</label><input
      id="phone_number"
      type="text"
      placeholder="Phone Number"
      name="phone_number"
      required
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    />
    <div class="empty-feedback text-red-400 text-sm mt-1">Please provide your contact number.</div>
    <div class="invalid-feedback text-red-400 text-sm mt-1">
      Please provide a valid contact number.
    </div>
  </div>
  <Button type="submit" size="lg" block>Inscrivez-vous gratuitement</Button>
  <div id="result" class="mt-3 text-center"></div>
</form>

<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }
</style>

<script is:inline>
  const form = document.getElementById('form');
  const result = document.getElementById('result');

  form.addEventListener('submit', function (e) {
    e.preventDefault();
    form.classList.add('was-validated');
    if (!form.checkValidity()) {
      form.querySelectorAll(':invalid')[0].focus();
      return;
    }

    const formData = new FormData(form);
    const object = Object.fromEntries(formData);
    const formDetails = {
      email: object.email_address,
      locale: 'en',
      fields: [
        { slug: 'first_name', value: object.first_name },
        { slug: 'phone_number', value: object.phone_number },
      ],
    };
    console.log('Form submitted', formData);

    result.innerHTML = 'Sending...';

    const options = {
      method: 'POST',
      withCredentials: false,
      url: 'https://api.systeme.io/api/contacts',
      headers: {
        accept: 'application/json',
        'content-type': 'application/json',
        'X-API-Key': 'jabqip9riakaglwjgfldpohhug978oj07sjfjo146tzq211ihpc6pkhy5v8idnee',
      },
      data: {
        email: object.email_address,
        fields: [
          { slug: 'first_name', value: object.first_name },
          { slug: 'phone_number', value: object.phone_number },
        ],
      },
    };
    const data = JSON.stringify({
      email: 'callum_fallows+4@hotmail.co.uk',
      fields: [
        {
          slug: 'first_name',
          value: 'Callum Fallows',
        },
        {
          slug: 'phone_number',
          value: '0777755444',
        },
      ],
    });

    const xhr = new XMLHttpRequest();
    xhr.withCredentials = true;

    xhr.addEventListener('readystatechange', function () {
      if (this.readyState === this.DONE) {
        console.log(this.responseText);
      }
    });

    xhr.open('POST', 'https://api.systeme.io/api/contacts');
    xhr.setRequestHeader('accept', 'application/json');
    xhr.setRequestHeader('content-type', 'application/json');
    xhr.setRequestHeader(
      'X-API-Key',
      'jabqip9riakaglwjgfldpohhug978oj07sjfjo146tzq211ihpc6pkhy5v8idnee'
    );

    xhr.send(data);
    // axios.auth('jabqip9riakaglwjgfldpohhug978oj07sjfjo146tzq211ihpc6pkhy5v8idnee');
    // systeme
    //   .post_contact()
    //   .request(options)
    //   .then(async response => {
    //     let json = await response.json();
    //     if (response.status == 200) {
    //       result.classList.add('text-green-500');
    //       result.innerHTML = json.message;
    //     } else {
    //       console.log(response);
    //       result.classList.add('text-red-500');
    //       result.innerHTML = json.message;
    //     }
    //   })
    //   .catch(error => {
    //     console.log(error);
    //     result.innerHTML = 'Something went wrong!';
    //   })
    //   .then(function () {
    //     form.reset();
    //     form.classList.remove('was-validated');
    //     setTimeout(() => {
    //       result.style.display = 'none';
    //     }, 5000);
    //   });
  });
</script>
